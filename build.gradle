tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    mavenCentral()
}
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.0")
        classpath("org.gradle:test-retry-gradle-plugin:1.1.0")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "org.gradle.test-retry"
apply plugin: 'net.serenity-bdd.aggregator'

ext {
    slf4jVersion = '1.7.32'
    serenityCoreVersion = '3.0.5'
    cucumberCoreVersion = '6.11.0'
    serenityCucumberVersion = '2.6.0'
    junitVersion = '4.13.2'
    assertJVersion = '3.21.0'
    logbackVersion = '1.2.6'
    fakerVersion = '1.0.2'
}
dependencies {

    implementation "com.github.javafaker:javafaker:${fakerVersion}",
            "net.serenity-bdd:serenity-ensure:${serenityCoreVersion}",
            "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:slf4j-log4j12:${slf4jVersion}",
            "net.serenity-bdd:serenity-screenplay-rest:${serenityCoreVersion}",
            "net.serenity-bdd:serenity-junit:1.0.23"

    testImplementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}",
            "io.cucumber:cucumber-core:${cucumberCoreVersion}",
            "net.serenity-bdd:serenity-cucumber6:${serenityCucumberVersion}",
            "io.cucumber:cucumber-junit:${cucumberCoreVersion}",
            "junit:junit:${junitVersion}",
            "org.assertj:assertj-core:${assertJVersion}"
}

test {

    options {
        systemProperties(System.getProperties())
    }

    retry {
        maxRetries = 6
        maxFailures = 40
        failOnPassedAfterRetry = false
    }

    maxParallelForks = 3
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)
